// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nfs_data.proto

#ifndef PROTOBUF_nfs_5fdata_2eproto__INCLUDED
#define PROTOBUF_nfs_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace nfs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_nfs_5fdata_2eproto();
void protobuf_AssignDesc_nfs_5fdata_2eproto();
void protobuf_ShutdownFile_nfs_5fdata_2eproto();

class Buffer;
class CData;
class Filelist;
class Result;
class Stat;

// ===================================================================

class CData : public ::google::protobuf::Message {
 public:
  CData();
  virtual ~CData();

  CData(const CData& from);

  inline CData& operator=(const CData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CData& default_instance();

  void Swap(CData* other);

  // implements Message ----------------------------------------------

  inline CData* New() const { return New(NULL); }

  CData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CData& from);
  void MergeFrom(const CData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 call = 1;
  void clear_call();
  static const int kCallFieldNumber = 1;
  ::google::protobuf::int64 call() const;
  void set_call(::google::protobuf::int64 value);

  // optional string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int64 mask = 3;
  void clear_mask();
  static const int kMaskFieldNumber = 3;
  ::google::protobuf::int64 mask() const;
  void set_mask(::google::protobuf::int64 value);

  // optional int64 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional int64 offset = 5;
  void clear_offset();
  static const int kOffsetFieldNumber = 5;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // optional int64 mode = 6;
  void clear_mode();
  static const int kModeFieldNumber = 6;
  ::google::protobuf::int64 mode() const;
  void set_mode(::google::protobuf::int64 value);

  // optional int64 rdev = 7;
  void clear_rdev();
  static const int kRdevFieldNumber = 7;
  ::google::protobuf::int64 rdev() const;
  void set_rdev(::google::protobuf::int64 value);

  // optional int64 uid = 8;
  void clear_uid();
  static const int kUidFieldNumber = 8;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional int64 gid = 9;
  void clear_gid();
  static const int kGidFieldNumber = 9;
  ::google::protobuf::int64 gid() const;
  void set_gid(::google::protobuf::int64 value);

  // optional int64 flags = 10;
  void clear_flags();
  static const int kFlagsFieldNumber = 10;
  ::google::protobuf::int64 flags() const;
  void set_flags(::google::protobuf::int64 value);

  // optional string frompath = 11;
  void clear_frompath();
  static const int kFrompathFieldNumber = 11;
  const ::std::string& frompath() const;
  void set_frompath(const ::std::string& value);
  void set_frompath(const char* value);
  void set_frompath(const char* value, size_t size);
  ::std::string* mutable_frompath();
  ::std::string* release_frompath();
  void set_allocated_frompath(::std::string* frompath);

  // optional string topath = 12;
  void clear_topath();
  static const int kTopathFieldNumber = 12;
  const ::std::string& topath() const;
  void set_topath(const ::std::string& value);
  void set_topath(const char* value);
  void set_topath(const char* value, size_t size);
  ::std::string* mutable_topath();
  ::std::string* release_topath();
  void set_allocated_topath(::std::string* topath);

  // optional int64 res = 13;
  void clear_res();
  static const int kResFieldNumber = 13;
  ::google::protobuf::int64 res() const;
  void set_res(::google::protobuf::int64 value);

  // optional string buf = 14;
  void clear_buf();
  static const int kBufFieldNumber = 14;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const char* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // @@protoc_insertion_point(class_scope:nfs.CData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 call_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int64 mask_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 offset_;
  ::google::protobuf::int64 mode_;
  ::google::protobuf::int64 rdev_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 gid_;
  ::google::protobuf::int64 flags_;
  ::google::protobuf::internal::ArenaStringPtr frompath_;
  ::google::protobuf::internal::ArenaStringPtr topath_;
  ::google::protobuf::int64 res_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfs_5fdata_2eproto();
  friend void protobuf_AssignDesc_nfs_5fdata_2eproto();
  friend void protobuf_ShutdownFile_nfs_5fdata_2eproto();

  void InitAsDefaultInstance();
  static CData* default_instance_;
};
// -------------------------------------------------------------------

class Stat : public ::google::protobuf::Message {
 public:
  Stat();
  virtual ~Stat();

  Stat(const Stat& from);

  inline Stat& operator=(const Stat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stat& default_instance();

  void Swap(Stat* other);

  // implements Message ----------------------------------------------

  inline Stat* New() const { return New(NULL); }

  Stat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stat& from);
  void MergeFrom(const Stat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Stat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 dev = 1;
  void clear_dev();
  static const int kDevFieldNumber = 1;
  ::google::protobuf::int64 dev() const;
  void set_dev(::google::protobuf::int64 value);

  // optional int64 ino = 2;
  void clear_ino();
  static const int kInoFieldNumber = 2;
  ::google::protobuf::int64 ino() const;
  void set_ino(::google::protobuf::int64 value);

  // optional int64 mode = 3;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  ::google::protobuf::int64 mode() const;
  void set_mode(::google::protobuf::int64 value);

  // optional int64 nlink = 4;
  void clear_nlink();
  static const int kNlinkFieldNumber = 4;
  ::google::protobuf::int64 nlink() const;
  void set_nlink(::google::protobuf::int64 value);

  // optional int64 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional int64 gid = 6;
  void clear_gid();
  static const int kGidFieldNumber = 6;
  ::google::protobuf::int64 gid() const;
  void set_gid(::google::protobuf::int64 value);

  // optional int64 rdev = 7;
  void clear_rdev();
  static const int kRdevFieldNumber = 7;
  ::google::protobuf::int64 rdev() const;
  void set_rdev(::google::protobuf::int64 value);

  // optional int64 size = 8;
  void clear_size();
  static const int kSizeFieldNumber = 8;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional int64 blksize = 9;
  void clear_blksize();
  static const int kBlksizeFieldNumber = 9;
  ::google::protobuf::int64 blksize() const;
  void set_blksize(::google::protobuf::int64 value);

  // optional int64 blocks = 10;
  void clear_blocks();
  static const int kBlocksFieldNumber = 10;
  ::google::protobuf::int64 blocks() const;
  void set_blocks(::google::protobuf::int64 value);

  // optional int64 mtime = 11;
  void clear_mtime();
  static const int kMtimeFieldNumber = 11;
  ::google::protobuf::int64 mtime() const;
  void set_mtime(::google::protobuf::int64 value);

  // optional int64 ctime = 12;
  void clear_ctime();
  static const int kCtimeFieldNumber = 12;
  ::google::protobuf::int64 ctime() const;
  void set_ctime(::google::protobuf::int64 value);

  // optional int64 atime = 13;
  void clear_atime();
  static const int kAtimeFieldNumber = 13;
  ::google::protobuf::int64 atime() const;
  void set_atime(::google::protobuf::int64 value);

  // optional int64 res = 14;
  void clear_res();
  static const int kResFieldNumber = 14;
  ::google::protobuf::int64 res() const;
  void set_res(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:nfs.Stat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 dev_;
  ::google::protobuf::int64 ino_;
  ::google::protobuf::int64 mode_;
  ::google::protobuf::int64 nlink_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 gid_;
  ::google::protobuf::int64 rdev_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 blksize_;
  ::google::protobuf::int64 blocks_;
  ::google::protobuf::int64 mtime_;
  ::google::protobuf::int64 ctime_;
  ::google::protobuf::int64 atime_;
  ::google::protobuf::int64 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfs_5fdata_2eproto();
  friend void protobuf_AssignDesc_nfs_5fdata_2eproto();
  friend void protobuf_ShutdownFile_nfs_5fdata_2eproto();

  void InitAsDefaultInstance();
  static Stat* default_instance_;
};
// -------------------------------------------------------------------

class Filelist : public ::google::protobuf::Message {
 public:
  Filelist();
  virtual ~Filelist();

  Filelist(const Filelist& from);

  inline Filelist& operator=(const Filelist& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Filelist& default_instance();

  void Swap(Filelist* other);

  // implements Message ----------------------------------------------

  inline Filelist* New() const { return New(NULL); }

  Filelist* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Filelist& from);
  void MergeFrom(const Filelist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Filelist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string filename = 1;
  int filename_size() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename(int index) const;
  ::std::string* mutable_filename(int index);
  void set_filename(int index, const ::std::string& value);
  void set_filename(int index, const char* value);
  void set_filename(int index, const char* value, size_t size);
  ::std::string* add_filename();
  void add_filename(const ::std::string& value);
  void add_filename(const char* value);
  void add_filename(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& filename() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filename();

  // optional int64 res = 14;
  void clear_res();
  static const int kResFieldNumber = 14;
  ::google::protobuf::int64 res() const;
  void set_res(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:nfs.Filelist)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> filename_;
  ::google::protobuf::int64 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfs_5fdata_2eproto();
  friend void protobuf_AssignDesc_nfs_5fdata_2eproto();
  friend void protobuf_ShutdownFile_nfs_5fdata_2eproto();

  void InitAsDefaultInstance();
  static Filelist* default_instance_;
};
// -------------------------------------------------------------------

class Buffer : public ::google::protobuf::Message {
 public:
  Buffer();
  virtual ~Buffer();

  Buffer(const Buffer& from);

  inline Buffer& operator=(const Buffer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Buffer& default_instance();

  void Swap(Buffer* other);

  // implements Message ----------------------------------------------

  inline Buffer* New() const { return New(NULL); }

  Buffer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Buffer& from);
  void MergeFrom(const Buffer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Buffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string buf = 1;
  void clear_buf();
  static const int kBufFieldNumber = 1;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const char* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // optional int64 res = 14;
  void clear_res();
  static const int kResFieldNumber = 14;
  ::google::protobuf::int64 res() const;
  void set_res(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:nfs.Buffer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int64 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfs_5fdata_2eproto();
  friend void protobuf_AssignDesc_nfs_5fdata_2eproto();
  friend void protobuf_ShutdownFile_nfs_5fdata_2eproto();

  void InitAsDefaultInstance();
  static Buffer* default_instance_;
};
// -------------------------------------------------------------------

class Result : public ::google::protobuf::Message {
 public:
  Result();
  virtual ~Result();

  Result(const Result& from);

  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Result& default_instance();

  void Swap(Result* other);

  // implements Message ----------------------------------------------

  inline Result* New() const { return New(NULL); }

  Result* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::google::protobuf::int64 res() const;
  void set_res(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:nfs.Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 res_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_nfs_5fdata_2eproto();
  friend void protobuf_AssignDesc_nfs_5fdata_2eproto();
  friend void protobuf_ShutdownFile_nfs_5fdata_2eproto();

  void InitAsDefaultInstance();
  static Result* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CData

// optional int64 call = 1;
inline void CData::clear_call() {
  call_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CData::call() const {
  // @@protoc_insertion_point(field_get:nfs.CData.call)
  return call_;
}
inline void CData::set_call(::google::protobuf::int64 value) {
  
  call_ = value;
  // @@protoc_insertion_point(field_set:nfs.CData.call)
}

// optional string path = 2;
inline void CData::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CData::path() const {
  // @@protoc_insertion_point(field_get:nfs.CData.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CData::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfs.CData.path)
}
inline void CData::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfs.CData.path)
}
inline void CData::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfs.CData.path)
}
inline ::std::string* CData::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:nfs.CData.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CData::release_path() {
  // @@protoc_insertion_point(field_release:nfs.CData.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CData::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:nfs.CData.path)
}

// optional int64 mask = 3;
inline void CData::clear_mask() {
  mask_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CData::mask() const {
  // @@protoc_insertion_point(field_get:nfs.CData.mask)
  return mask_;
}
inline void CData::set_mask(::google::protobuf::int64 value) {
  
  mask_ = value;
  // @@protoc_insertion_point(field_set:nfs.CData.mask)
}

// optional int64 size = 4;
inline void CData::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CData::size() const {
  // @@protoc_insertion_point(field_get:nfs.CData.size)
  return size_;
}
inline void CData::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfs.CData.size)
}

// optional int64 offset = 5;
inline void CData::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CData::offset() const {
  // @@protoc_insertion_point(field_get:nfs.CData.offset)
  return offset_;
}
inline void CData::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfs.CData.offset)
}

// optional int64 mode = 6;
inline void CData::clear_mode() {
  mode_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CData::mode() const {
  // @@protoc_insertion_point(field_get:nfs.CData.mode)
  return mode_;
}
inline void CData::set_mode(::google::protobuf::int64 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfs.CData.mode)
}

// optional int64 rdev = 7;
inline void CData::clear_rdev() {
  rdev_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CData::rdev() const {
  // @@protoc_insertion_point(field_get:nfs.CData.rdev)
  return rdev_;
}
inline void CData::set_rdev(::google::protobuf::int64 value) {
  
  rdev_ = value;
  // @@protoc_insertion_point(field_set:nfs.CData.rdev)
}

// optional int64 uid = 8;
inline void CData::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CData::uid() const {
  // @@protoc_insertion_point(field_get:nfs.CData.uid)
  return uid_;
}
inline void CData::set_uid(::google::protobuf::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:nfs.CData.uid)
}

// optional int64 gid = 9;
inline void CData::clear_gid() {
  gid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CData::gid() const {
  // @@protoc_insertion_point(field_get:nfs.CData.gid)
  return gid_;
}
inline void CData::set_gid(::google::protobuf::int64 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:nfs.CData.gid)
}

// optional int64 flags = 10;
inline void CData::clear_flags() {
  flags_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CData::flags() const {
  // @@protoc_insertion_point(field_get:nfs.CData.flags)
  return flags_;
}
inline void CData::set_flags(::google::protobuf::int64 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:nfs.CData.flags)
}

// optional string frompath = 11;
inline void CData::clear_frompath() {
  frompath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CData::frompath() const {
  // @@protoc_insertion_point(field_get:nfs.CData.frompath)
  return frompath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CData::set_frompath(const ::std::string& value) {
  
  frompath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfs.CData.frompath)
}
inline void CData::set_frompath(const char* value) {
  
  frompath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfs.CData.frompath)
}
inline void CData::set_frompath(const char* value, size_t size) {
  
  frompath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfs.CData.frompath)
}
inline ::std::string* CData::mutable_frompath() {
  
  // @@protoc_insertion_point(field_mutable:nfs.CData.frompath)
  return frompath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CData::release_frompath() {
  // @@protoc_insertion_point(field_release:nfs.CData.frompath)
  
  return frompath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CData::set_allocated_frompath(::std::string* frompath) {
  if (frompath != NULL) {
    
  } else {
    
  }
  frompath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frompath);
  // @@protoc_insertion_point(field_set_allocated:nfs.CData.frompath)
}

// optional string topath = 12;
inline void CData::clear_topath() {
  topath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CData::topath() const {
  // @@protoc_insertion_point(field_get:nfs.CData.topath)
  return topath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CData::set_topath(const ::std::string& value) {
  
  topath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfs.CData.topath)
}
inline void CData::set_topath(const char* value) {
  
  topath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfs.CData.topath)
}
inline void CData::set_topath(const char* value, size_t size) {
  
  topath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfs.CData.topath)
}
inline ::std::string* CData::mutable_topath() {
  
  // @@protoc_insertion_point(field_mutable:nfs.CData.topath)
  return topath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CData::release_topath() {
  // @@protoc_insertion_point(field_release:nfs.CData.topath)
  
  return topath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CData::set_allocated_topath(::std::string* topath) {
  if (topath != NULL) {
    
  } else {
    
  }
  topath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topath);
  // @@protoc_insertion_point(field_set_allocated:nfs.CData.topath)
}

// optional int64 res = 13;
inline void CData::clear_res() {
  res_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CData::res() const {
  // @@protoc_insertion_point(field_get:nfs.CData.res)
  return res_;
}
inline void CData::set_res(::google::protobuf::int64 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:nfs.CData.res)
}

// optional string buf = 14;
inline void CData::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CData::buf() const {
  // @@protoc_insertion_point(field_get:nfs.CData.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CData::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfs.CData.buf)
}
inline void CData::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfs.CData.buf)
}
inline void CData::set_buf(const char* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfs.CData.buf)
}
inline ::std::string* CData::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:nfs.CData.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CData::release_buf() {
  // @@protoc_insertion_point(field_release:nfs.CData.buf)
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CData::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:nfs.CData.buf)
}

// -------------------------------------------------------------------

// Stat

// optional int64 dev = 1;
inline void Stat::clear_dev() {
  dev_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::dev() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.dev)
  return dev_;
}
inline void Stat::set_dev(::google::protobuf::int64 value) {
  
  dev_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.dev)
}

// optional int64 ino = 2;
inline void Stat::clear_ino() {
  ino_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::ino() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.ino)
  return ino_;
}
inline void Stat::set_ino(::google::protobuf::int64 value) {
  
  ino_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.ino)
}

// optional int64 mode = 3;
inline void Stat::clear_mode() {
  mode_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::mode() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.mode)
  return mode_;
}
inline void Stat::set_mode(::google::protobuf::int64 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.mode)
}

// optional int64 nlink = 4;
inline void Stat::clear_nlink() {
  nlink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::nlink() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.nlink)
  return nlink_;
}
inline void Stat::set_nlink(::google::protobuf::int64 value) {
  
  nlink_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.nlink)
}

// optional int64 uid = 5;
inline void Stat::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::uid() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.uid)
  return uid_;
}
inline void Stat::set_uid(::google::protobuf::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.uid)
}

// optional int64 gid = 6;
inline void Stat::clear_gid() {
  gid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::gid() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.gid)
  return gid_;
}
inline void Stat::set_gid(::google::protobuf::int64 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.gid)
}

// optional int64 rdev = 7;
inline void Stat::clear_rdev() {
  rdev_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::rdev() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.rdev)
  return rdev_;
}
inline void Stat::set_rdev(::google::protobuf::int64 value) {
  
  rdev_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.rdev)
}

// optional int64 size = 8;
inline void Stat::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::size() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.size)
  return size_;
}
inline void Stat::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.size)
}

// optional int64 blksize = 9;
inline void Stat::clear_blksize() {
  blksize_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::blksize() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.blksize)
  return blksize_;
}
inline void Stat::set_blksize(::google::protobuf::int64 value) {
  
  blksize_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.blksize)
}

// optional int64 blocks = 10;
inline void Stat::clear_blocks() {
  blocks_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::blocks() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.blocks)
  return blocks_;
}
inline void Stat::set_blocks(::google::protobuf::int64 value) {
  
  blocks_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.blocks)
}

// optional int64 mtime = 11;
inline void Stat::clear_mtime() {
  mtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::mtime() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.mtime)
  return mtime_;
}
inline void Stat::set_mtime(::google::protobuf::int64 value) {
  
  mtime_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.mtime)
}

// optional int64 ctime = 12;
inline void Stat::clear_ctime() {
  ctime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::ctime() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.ctime)
  return ctime_;
}
inline void Stat::set_ctime(::google::protobuf::int64 value) {
  
  ctime_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.ctime)
}

// optional int64 atime = 13;
inline void Stat::clear_atime() {
  atime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::atime() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.atime)
  return atime_;
}
inline void Stat::set_atime(::google::protobuf::int64 value) {
  
  atime_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.atime)
}

// optional int64 res = 14;
inline void Stat::clear_res() {
  res_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::res() const {
  // @@protoc_insertion_point(field_get:nfs.Stat.res)
  return res_;
}
inline void Stat::set_res(::google::protobuf::int64 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:nfs.Stat.res)
}

// -------------------------------------------------------------------

// Filelist

// repeated string filename = 1;
inline int Filelist::filename_size() const {
  return filename_.size();
}
inline void Filelist::clear_filename() {
  filename_.Clear();
}
inline const ::std::string& Filelist::filename(int index) const {
  // @@protoc_insertion_point(field_get:nfs.Filelist.filename)
  return filename_.Get(index);
}
inline ::std::string* Filelist::mutable_filename(int index) {
  // @@protoc_insertion_point(field_mutable:nfs.Filelist.filename)
  return filename_.Mutable(index);
}
inline void Filelist::set_filename(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:nfs.Filelist.filename)
  filename_.Mutable(index)->assign(value);
}
inline void Filelist::set_filename(int index, const char* value) {
  filename_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:nfs.Filelist.filename)
}
inline void Filelist::set_filename(int index, const char* value, size_t size) {
  filename_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:nfs.Filelist.filename)
}
inline ::std::string* Filelist::add_filename() {
  // @@protoc_insertion_point(field_add_mutable:nfs.Filelist.filename)
  return filename_.Add();
}
inline void Filelist::add_filename(const ::std::string& value) {
  filename_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:nfs.Filelist.filename)
}
inline void Filelist::add_filename(const char* value) {
  filename_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:nfs.Filelist.filename)
}
inline void Filelist::add_filename(const char* value, size_t size) {
  filename_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:nfs.Filelist.filename)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Filelist::filename() const {
  // @@protoc_insertion_point(field_list:nfs.Filelist.filename)
  return filename_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Filelist::mutable_filename() {
  // @@protoc_insertion_point(field_mutable_list:nfs.Filelist.filename)
  return &filename_;
}

// optional int64 res = 14;
inline void Filelist::clear_res() {
  res_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Filelist::res() const {
  // @@protoc_insertion_point(field_get:nfs.Filelist.res)
  return res_;
}
inline void Filelist::set_res(::google::protobuf::int64 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:nfs.Filelist.res)
}

// -------------------------------------------------------------------

// Buffer

// optional string buf = 1;
inline void Buffer::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Buffer::buf() const {
  // @@protoc_insertion_point(field_get:nfs.Buffer.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Buffer::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfs.Buffer.buf)
}
inline void Buffer::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfs.Buffer.buf)
}
inline void Buffer::set_buf(const char* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfs.Buffer.buf)
}
inline ::std::string* Buffer::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:nfs.Buffer.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Buffer::release_buf() {
  // @@protoc_insertion_point(field_release:nfs.Buffer.buf)
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Buffer::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:nfs.Buffer.buf)
}

// optional int64 res = 14;
inline void Buffer::clear_res() {
  res_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Buffer::res() const {
  // @@protoc_insertion_point(field_get:nfs.Buffer.res)
  return res_;
}
inline void Buffer::set_res(::google::protobuf::int64 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:nfs.Buffer.res)
}

// -------------------------------------------------------------------

// Result

// optional int64 res = 1;
inline void Result::clear_res() {
  res_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Result::res() const {
  // @@protoc_insertion_point(field_get:nfs.Result.res)
  return res_;
}
inline void Result::set_res(::google::protobuf::int64 value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:nfs.Result.res)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace nfs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_nfs_5fdata_2eproto__INCLUDED
